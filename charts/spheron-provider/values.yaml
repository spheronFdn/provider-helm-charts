# Provider Configuration
# Default values for provider.

image:
  repository: spheronnetwork/devnet-provider
  pullPolicy: Always
  tag: latest-amd64
  imagePullSecrets: []

debug: "false"

provider:
  domain: ""  # Required: Provider domain name
  from: ""  # Required: Provider address
  key: ""   # Required: Provider key
  keySecret: ""  # Required: Key secret
  providerContact:
    email: ""     # Required: Contact email
    website: ""   # Optional: Provider website
  paths:
    spheronHome: "/spheron-key"
    home: "/root/.spheron"

# If you plan to use bid price script, then make sure to set bidpricescript variable to the base64 encoded contents of the script.
# This will automatically switch SPHERON_BID_PRICE_STRATEGY from "scale" (default) to "shellScript".
# Sample scripts can be found under charts/spheron-provider/scripts/ directory.
# Example usage:
# --set bidpricescript="$(cat ./charts/spheron-provider/scripts/price_script_generic.sh | openssl base64 -A)"
bidPrice:
  strategy: "randomRange"
  scale:
    cpu: "0.004"
    memory: "0.0016"
    endpoint: "1"
    ip: "60" # set pricing for leased IP; 1 IP would cost ((1*60*429903)/10^6)*0.194 = $5/month (if 1 AKT = $0.194; and 429903 blocks a month)
    storage: "0.00016,beta2=0.00016" # set storage pricing for your StorageClass you are using; here is an example for beta2 StorageClass:


deployment:
  networkPolicies:
    enabled: "false"

clusterNodePortQuantity: "2500"

ipOperator: false

overcommit:
  pct:
    cpu: 0 # Percentage of CPU overcommit
    mem: 0 # Percentage of memory overcommit
    storage: 0 # Percentage of storage overcommit

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name:

podSecurityContext: {}

securityContext: {}

resources:
  limits:
    cpu: 2000m
    memory: 1024Mi
  requests:
    cpu: 1000m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector:
  node-role.kubernetes.io/master: "true"

tolerations: []

affinity: {}
